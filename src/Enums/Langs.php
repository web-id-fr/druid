<?php

namespace Webid\Druid\Enums;

enum Langs: string
{

    case AF_NA = 'af_NA';
    case AF_ZA = 'af_ZA';
    case AF = 'af';
    case AK_GH = 'ak_GH';
    case AK = 'ak';
    case SQ_AL = 'sq_AL';
    case SQ = 'sq';
    case AM_ET = 'am_ET';
    case AM = 'am';
    case AR_DZ = 'ar_DZ';
    case AR_BH = 'ar_BH';
    case AR_EG = 'ar_EG';
    case AR_IQ = 'ar_IQ';
    case AR_JO = 'ar_JO';
    case AR_KW = 'ar_KW';
    case AR_LB = 'ar_LB';
    case AR_LY = 'ar_LY';
    case AR_MA = 'ar_MA';
    case AR_OM = 'ar_OM';
    case AR_QA = 'ar_QA';
    case AR_SA = 'ar_SA';
    case AR_SD = 'ar_SD';
    case AR_SY = 'ar_SY';
    case AR_TN = 'ar_TN';
    case AR_AE = 'ar_AE';
    case AR_YE = 'ar_YE';
    case AR = 'ar';
    case HY_AM = 'hy_AM';
    case HY = 'hy';
    case AS_IN = 'as_IN';
    case AS = 'as';
    case ASA_TZ = 'asa_TZ';
    case ASA = 'asa';
    case AZ_CYRL = 'az_Cyrl';
    case AZ_CYRL_AZ = 'az_Cyrl_AZ';
    case AZ_LATN = 'az_Latn';
    case AZ_LATN_AZ = 'az_Latn_AZ';
    case AZ = 'az';
    case BM_ML = 'bm_ML';
    case BM = 'bm';
    case EU_ES = 'eu_ES';
    case EU = 'eu';
    case BE_BY = 'be_BY';
    case BE = 'be';
    case BEM_ZM = 'bem_ZM';
    case BEM = 'bem';
    case BEZ_TZ = 'bez_TZ';
    case BEZ = 'bez';
    case BN_BD = 'bn_BD';
    case BN_IN = 'bn_IN';
    case BN = 'bn';
    case BS_BA = 'bs_BA';
    case BS = 'bs';
    case BG_BG = 'bg_BG';
    case BG = 'bg';
    case MY_MM = 'my_MM';
    case MY = 'my';
    case YUE_HANT_HK = 'yue_Hant_HK';
    case CA_ES = 'ca_ES';
    case CA = 'ca';
    case TZM_LATN = 'tzm_Latn';
    case TZM_LATN_MA = 'tzm_Latn_MA';
    case TZM = 'tzm';
    case CHR_US = 'chr_US';
    case CHR = 'chr';
    case CGG_UG = 'cgg_UG';
    case CGG = 'cgg';
    case ZH_HANS = 'zh_Hans';
    case ZH_HANS_CN = 'zh_Hans_CN';
    case ZH_HANS_HK = 'zh_Hans_HK';
    case ZH_HANS_MO = 'zh_Hans_MO';
    case ZH_HANS_SG = 'zh_Hans_SG';
    case ZH_HANT = 'zh_Hant';
    case ZH_HANT_HK = 'zh_Hant_HK';
    case ZH_HANT_MO = 'zh_Hant_MO';
    case ZH_HANT_TW = 'zh_Hant_TW';
    case ZH = 'zh';
    case KW_GB = 'kw_GB';
    case KW = 'kw';
    case HR_HR = 'hr_HR';
    case HR = 'hr';
    case CS_CZ = 'cs_CZ';
    case CS = 'cs';
    case DA_DK = 'da_DK';
    case DA = 'da';
    case NL_BE = 'nl_BE';
    case NL_NL = 'nl_NL';
    case NL = 'nl';
    case EBU_KE = 'ebu_KE';
    case EBU = 'ebu';
    case EN_AS = 'en_AS';
    case EN_AU = 'en_AU';
    case EN_BE = 'en_BE';
    case EN_BZ = 'en_BZ';
    case EN_BW = 'en_BW';
    case EN_CA = 'en_CA';
    case EN_GU = 'en_GU';
    case EN_HK = 'en_HK';
    case EN_IN = 'en_IN';
    case EN_IE = 'en_IE';
    case EN_IL = 'en_IL';
    case EN_JM = 'en_JM';
    case EN_MT = 'en_MT';
    case EN_MH = 'en_MH';
    case EN_MU = 'en_MU';
    case EN_NA = 'en_NA';
    case EN_NZ = 'en_NZ';
    case EN_MP = 'en_MP';
    case EN_PK = 'en_PK';
    case EN_PH = 'en_PH';
    case EN_SG = 'en_SG';
    case EN_ZA = 'en_ZA';
    case EN_TT = 'en_TT';
    case EN_UM = 'en_UM';
    case EN_VI = 'en_VI';
    case EN_GB = 'en_GB';
    case EN_US = 'en_US';
    case EN_ZW = 'en_ZW';
    case EN = 'en';
    case EO = 'eo';
    case ET_EE = 'et_EE';
    case ET = 'et';
    case EE_GH = 'ee_GH';
    case EE_TG = 'ee_TG';
    case EE = 'ee';
    case FO_FO = 'fo_FO';
    case FO = 'fo';
    case FIL_PH = 'fil_PH';
    case FIL = 'fil';
    case FI_FI = 'fi_FI';
    case FI = 'fi';
    case FR_BE = 'fr_BE';
    case FR_BJ = 'fr_BJ';
    case FR_BF = 'fr_BF';
    case FR_BI = 'fr_BI';
    case FR_CM = 'fr_CM';
    case FR_CA = 'fr_CA';
    case FR_CF = 'fr_CF';
    case FR_TD = 'fr_TD';
    case FR_KM = 'fr_KM';
    case FR_CG = 'fr_CG';
    case FR_CD = 'fr_CD';
    case FR_CI = 'fr_CI';
    case FR_DJ = 'fr_DJ';
    case FR_GQ = 'fr_GQ';
    case FR_FR = 'fr_FR';
    case FR_GA = 'fr_GA';
    case FR_GP = 'fr_GP';
    case FR_GN = 'fr_GN';
    case FR_LU = 'fr_LU';
    case FR_MG = 'fr_MG';
    case FR_ML = 'fr_ML';
    case FR_MQ = 'fr_MQ';
    case FR_MC = 'fr_MC';
    case FR_NE = 'fr_NE';
    case FR_RW = 'fr_RW';
    case FR_RE = 'fr_RE';
    case FR_BL = 'fr_BL';
    case FR_MF = 'fr_MF';
    case FR_SN = 'fr_SN';
    case FR_CH = 'fr_CH';
    case FR_TG = 'fr_TG';
    case FR = 'fr';
    case FF_SN = 'ff_SN';
    case FF = 'ff';
    case GL_ES = 'gl_ES';
    case GL = 'gl';
    case LG_UG = 'lg_UG';
    case LG = 'lg';
    case KA_GE = 'ka_GE';
    case KA = 'ka';
    case DE_AT = 'de_AT';
    case DE_BE = 'de_BE';
    case DE_DE = 'de_DE';
    case DE_LI = 'de_LI';
    case DE_LU = 'de_LU';
    case DE_CH = 'de_CH';
    case DE = 'de';
    case EL_CY = 'el_CY';
    case EL_GR = 'el_GR';
    case EL = 'el';
    case GU_IN = 'gu_IN';
    case GU = 'gu';
    case GUZ_KE = 'guz_KE';
    case GUZ = 'guz';
    case HA_LATN = 'ha_Latn';
    case HA_LATN_GH = 'ha_Latn_GH';
    case HA_LATN_NE = 'ha_Latn_NE';
    case HA_LATN_NG = 'ha_Latn_NG';
    case HA = 'ha';
    case HAW_US = 'haw_US';
    case HAW = 'haw';
    case HE_IL = 'he_IL';
    case HE = 'he';
    case HI_IN = 'hi_IN';
    case HI = 'hi';
    case HU_HU = 'hu_HU';
    case HU = 'hu';
    case IS_IS = 'is_IS';
    case IS = 'is';
    case IG_NG = 'ig_NG';
    case IG = 'ig';
    case ID_ID = 'id_ID';
    case ID = 'id';
    case GA_IE = 'ga_IE';
    case GA = 'ga';
    case IT_IT = 'it_IT';
    case IT_CH = 'it_CH';
    case IT = 'it';
    case JA_JP = 'ja_JP';
    case JA = 'ja';
    case KEA_CV = 'kea_CV';
    case KEA = 'kea';
    case KAB_DZ = 'kab_DZ';
    case KAB = 'kab';
    case KL_GL = 'kl_GL';
    case KL = 'kl';
    case KLN_KE = 'kln_KE';
    case KLN = 'kln';
    case KAM_KE = 'kam_KE';
    case KAM = 'kam';
    case KN_IN = 'kn_IN';
    case KN = 'kn';
    case KK_CYRL = 'kk_Cyrl';
    case KK_CYRL_KZ = 'kk_Cyrl_KZ';
    case KK = 'kk';
    case KM_KH = 'km_KH';
    case KM = 'km';
    case KI_KE = 'ki_KE';
    case KI = 'ki';
    case RW_RW = 'rw_RW';
    case RW = 'rw';
    case KOK_IN = 'kok_IN';
    case KOK = 'kok';
    case KO_KR = 'ko_KR';
    case KO = 'ko';
    case KHQ_ML = 'khq_ML';
    case KHQ = 'khq';
    case SES_ML = 'ses_ML';
    case SES = 'ses';
    case LAG_TZ = 'lag_TZ';
    case LAG = 'lag';
    case LV_LV = 'lv_LV';
    case LV = 'lv';
    case LT_LT = 'lt_LT';
    case LT = 'lt';
    case LUO_KE = 'luo_KE';
    case LUO = 'luo';
    case LUY_KE = 'luy_KE';
    case LUY = 'luy';
    case MK_MK = 'mk_MK';
    case MK = 'mk';
    case JMC_TZ = 'jmc_TZ';
    case JMC = 'jmc';
    case KDE_TZ = 'kde_TZ';
    case KDE = 'kde';
    case MG_MG = 'mg_MG';
    case MG = 'mg';
    case MS_BN = 'ms_BN';
    case MS_MY = 'ms_MY';
    case MS = 'ms';
    case ML_IN = 'ml_IN';
    case ML = 'ml';
    case MT_MT = 'mt_MT';
    case MT = 'mt';
    case GV_GB = 'gv_GB';
    case GV = 'gv';
    case MR_IN = 'mr_IN';
    case MR = 'mr';
    case MAS_KE = 'mas_KE';
    case MAS_TZ = 'mas_TZ';
    case MAS = 'mas';
    case MER_KE = 'mer_KE';
    case MER = 'mer';
    case MFE_MU = 'mfe_MU';
    case MFE = 'mfe';
    case NAQ_NA = 'naq_NA';
    case NAQ = 'naq';
    case NE_IN = 'ne_IN';
    case NE_NP = 'ne_NP';
    case NE = 'ne';
    case ND_ZW = 'nd_ZW';
    case ND = 'nd';
    case NB_NO = 'nb_NO';
    case NB = 'nb';
    case NN_NO = 'nn_NO';
    case NN = 'nn';
    case NYN_UG = 'nyn_UG';
    case NYN = 'nyn';
    case OR_IN = 'or_IN';
    case OR = 'or';
    case OM_ET = 'om_ET';
    case OM_KE = 'om_KE';
    case OM = 'om';
    case PS_AF = 'ps_AF';
    case PS = 'ps';
    case FA_AF = 'fa_AF';
    case FA_IR = 'fa_IR';
    case FA = 'fa';
    case PL_PL = 'pl_PL';
    case PL = 'pl';
    case PT_BR = 'pt_BR';
    case PT_GW = 'pt_GW';
    case PT_MZ = 'pt_MZ';
    case PT_PT = 'pt_PT';
    case PT = 'pt';
    case PA_ARAB = 'pa_Arab';
    case PA_ARAB_PK = 'pa_Arab_PK';
    case PA_GURU = 'pa_Guru';
    case PA_GURU_IN = 'pa_Guru_IN';
    case PA = 'pa';
    case RO_MD = 'ro_MD';
    case RO_RO = 'ro_RO';
    case RO = 'ro';
    case RM_CH = 'rm_CH';
    case RM = 'rm';
    case ROF_TZ = 'rof_TZ';
    case ROF = 'rof';
    case RU_MD = 'ru_MD';
    case RU_RU = 'ru_RU';
    case RU_UA = 'ru_UA';
    case RU = 'ru';
    case RWK_TZ = 'rwk_TZ';
    case RWK = 'rwk';
    case SAQ_KE = 'saq_KE';
    case SAQ = 'saq';
    case SG_CF = 'sg_CF';
    case SG = 'sg';
    case SEH_MZ = 'seh_MZ';
    case SEH = 'seh';
    case SR_CYRL = 'sr_Cyrl';
    case SR_CYRL_BA = 'sr_Cyrl_BA';
    case SR_CYRL_ME = 'sr_Cyrl_ME';
    case SR_CYRL_RS = 'sr_Cyrl_RS';
    case SR_LATN = 'sr_Latn';
    case SR_LATN_BA = 'sr_Latn_BA';
    case SR_LATN_ME = 'sr_Latn_ME';
    case SR_LATN_RS = 'sr_Latn_RS';
    case SR = 'sr';
    case SN_ZW = 'sn_ZW';
    case SN = 'sn';
    case II_CN = 'ii_CN';
    case II = 'ii';
    case SI_LK = 'si_LK';
    case SI = 'si';
    case SK_SK = 'sk_SK';
    case SK = 'sk';
    case SL_SI = 'sl_SI';
    case SL = 'sl';
    case XOG_UG = 'xog_UG';
    case XOG = 'xog';
    case SO_DJ = 'so_DJ';
    case SO_ET = 'so_ET';
    case SO_KE = 'so_KE';
    case SO_SO = 'so_SO';
    case SO = 'so';
    case ES_AR = 'es_AR';
    case ES_BO = 'es_BO';
    case ES_CL = 'es_CL';
    case ES_CO = 'es_CO';
    case ES_CR = 'es_CR';
    case ES_DO = 'es_DO';
    case ES_EC = 'es_EC';
    case ES_SV = 'es_SV';
    case ES_GQ = 'es_GQ';
    case ES_GT = 'es_GT';
    case ES_HN = 'es_HN';
    case ES_419 = 'es_419';
    case ES_MX = 'es_MX';
    case ES_NI = 'es_NI';
    case ES_PA = 'es_PA';
    case ES_PY = 'es_PY';
    case ES_PE = 'es_PE';
    case ES_PR = 'es_PR';
    case ES_ES = 'es_ES';
    case ES_US = 'es_US';
    case ES_UY = 'es_UY';
    case ES_VE = 'es_VE';
    case ES = 'es';
    case SW_KE = 'sw_KE';
    case SW_TZ = 'sw_TZ';
    case SW = 'sw';
    case SV_FI = 'sv_FI';
    case SV_SE = 'sv_SE';
    case SV = 'sv';
    case GSW_CH = 'gsw_CH';
    case GSW = 'gsw';
    case SHI_LATN = 'shi_Latn';
    case SHI_LATN_MA = 'shi_Latn_MA';
    case SHI_TFNG = 'shi_Tfng';
    case SHI_TFNG_MA = 'shi_Tfng_MA';
    case SHI = 'shi';
    case DAV_KE = 'dav_KE';
    case DAV = 'dav';
    case TA_IN = 'ta_IN';
    case TA_LK = 'ta_LK';
    case TA = 'ta';
    case TE_IN = 'te_IN';
    case TE = 'te';
    case TEO_KE = 'teo_KE';
    case TEO_UG = 'teo_UG';
    case TEO = 'teo';
    case TH_TH = 'th_TH';
    case TH = 'th';
    case BO_CN = 'bo_CN';
    case BO_IN = 'bo_IN';
    case BO = 'bo';
    case TI_ER = 'ti_ER';
    case TI_ET = 'ti_ET';
    case TI = 'ti';
    case TO_TO = 'to_TO';
    case TO = 'to';
    case TR_TR = 'tr_TR';
    case TR = 'tr';
    case UK_UA = 'uk_UA';
    case UK = 'uk';
    case UR_IN = 'ur_IN';
    case UR_PK = 'ur_PK';
    case UR = 'ur';
    case UZ_ARAB = 'uz_Arab';
    case UZ_ARAB_AF = 'uz_Arab_AF';
    case UZ_CYRL = 'uz_Cyrl';
    case UZ_CYRL_UZ = 'uz_Cyrl_UZ';
    case UZ_LATN = 'uz_Latn';
    case UZ_LATN_UZ = 'uz_Latn_UZ';
    case UZ = 'uz';
    case VI_VN = 'vi_VN';
    case VI = 'vi';
    case VUN_TZ = 'vun_TZ';
    case VUN = 'vun';
    case CY_GB = 'cy_GB';
    case CY = 'cy';
    case YO_NG = 'yo_NG';
    case YO = 'yo';
    case ZU_ZA = 'zu_ZA';
    case ZU = 'zu';


    function getName(): string
    {
        return match ($this) {

            self::AF_NA => __('Afrikaans (Namibia)'),
            self::AF_ZA => __('Afrikaans (South Africa)'),
            self::AF => __('Afrikaans'),
            self::AK_GH => __('Akan (Ghana)'),
            self::AK => __('Akan'),
            self::SQ_AL => __('Albanian (Albania)'),
            self::SQ => __('Albanian'),
            self::AM_ET => __('Amharic (Ethiopia)'),
            self::AM => __('Amharic'),
            self::AR_DZ => __('Arabic (Algeria)'),
            self::AR_BH => __('Arabic (Bahrain)'),
            self::AR_EG => __('Arabic (Egypt)'),
            self::AR_IQ => __('Arabic (Iraq)'),
            self::AR_JO => __('Arabic (Jordan)'),
            self::AR_KW => __('Arabic (Kuwait)'),
            self::AR_LB => __('Arabic (Lebanon)'),
            self::AR_LY => __('Arabic (Libya)'),
            self::AR_MA => __('Arabic (Morocco)'),
            self::AR_OM => __('Arabic (Oman)'),
            self::AR_QA => __('Arabic (Qatar)'),
            self::AR_SA => __('Arabic (Saudi Arabia)'),
            self::AR_SD => __('Arabic (Sudan)'),
            self::AR_SY => __('Arabic (Syria)'),
            self::AR_TN => __('Arabic (Tunisia)'),
            self::AR_AE => __('Arabic (United Arab Emirates)'),
            self::AR_YE => __('Arabic (Yemen)'),
            self::AR => __('Arabic'),
            self::HY_AM => __('Armenian (Armenia)'),
            self::HY => __('Armenian'),
            self::AS_IN => __('Assamese (India)'),
            self::AS => __('Assamese'),
            self::ASA_TZ => __('Asu (Tanzania)'),
            self::ASA => __('Asu'),
            self::AZ_CYRL => __('Azerbaijani (Cyrillic, Azerbaijan)'),
            self::AZ_CYRL_AZ => __('Azerbaijani (Cyrillic, Azerbaijan)'),
            self::AZ_LATN => __('Azerbaijani (Latin)'),
            self::AZ_LATN_AZ => __('Azerbaijani (Latin, Azerbaijan)'),
            self::AZ => __('Azerbaijani'),
            self::BM_ML => __('Bambara (Mali)'),
            self::BM => __('Bambara'),
            self::EU_ES => __('Basque (Spain)'),
            self::EU => __('Basque'),
            self::BE_BY => __('Belarusian (Belarus)'),
            self::BE => __('Belarusian'),
            self::BEM_ZM => __('Bemba (Zambia)'),
            self::BEM => __('Bemba'),
            self::BEZ_TZ => __('Bena (Tanzania)'),
            self::BEZ => __('Bena'),
            self::BN_BD => __('Bengali (Bangladesh)'),
            self::BN_IN => __('Bengali (India)'),
            self::BN => __('Bengali'),
            self::BS_BA => __('Bosnian (Bosnia and Herzegovina)'),
            self::BS => __('Bosnian'),
            self::BG_BG => __('Bulgarian (Bulgaria)'),
            self::BG => __('Bulgarian'),
            self::MY_MM => __('Burmese (Myanmar [Burma])'),
            self::MY => __('Burmese'),
            self::YUE_HANT_HK => __('Cantonese (Traditional, Hong Kong SAR China)'),
            self::CA_ES => __('Catalan (Spain)'),
            self::CA => __('Catalan'),
            self::TZM_LATN => __('Central Morocco Tamazight (Latin)'),
            self::TZM_LATN_MA => __('Central Morocco Tamazight (Latin, Morocco)'),
            self::TZM => __('Central Morocco Tamazight'),
            self::CHR_US => __('Cherokee (United States)'),
            self::CHR => __('Cherokee'),
            self::CGG_UG => __('Chiga (Uganda)'),
            self::CGG => __('Chiga'),
            self::ZH_HANS => __('Chinese (Simplified Han)'),
            self::ZH_HANS_CN => __('Chinese (Simplified Han, China)'),
            self::ZH_HANS_HK => __('Chinese (Simplified Han, Hong Kong SAR China)'),
            self::ZH_HANS_MO => __('Chinese (Simplified Han, Macau SAR China)'),
            self::ZH_HANS_SG => __('Chinese (Simplified Han, Singapore)'),
            self::ZH_HANT => __('Chinese (Traditional Han)'),
            self::ZH_HANT_HK => __('Chinese (Traditional Han, Hong Kong SAR China)'),
            self::ZH_HANT_MO => __('Chinese (Traditional Han, Macau SAR China)'),
            self::ZH_HANT_TW => __('Chinese (Traditional Han, Taiwan)'),
            self::ZH => __('Chinese'),
            self::KW_GB => __('Cornish (United Kingdom)'),
            self::KW => __('Cornish'),
            self::HR_HR => __('Croatian (Croatia)'),
            self::HR => __('Croatian'),
            self::CS_CZ => __('Czech (Czech Republic)'),
            self::CS => __('Czech'),
            self::DA_DK => __('Danish (Denmark)'),
            self::DA => __('Danish'),
            self::NL_BE => __('Dutch (Belgium)'),
            self::NL_NL => __('Dutch (Netherlands)'),
            self::NL => __('Dutch'),
            self::EBU_KE => __('Embu (Kenya)'),
            self::EBU => __('Embu'),
            self::EN_AS => __('English (American Samoa)'),
            self::EN_AU => __('English (Australia)'),
            self::EN_BE => __('English (Belgium)'),
            self::EN_BZ => __('English (Belize)'),
            self::EN_BW => __('English (Botswana)'),
            self::EN_CA => __('English (Canada)'),
            self::EN_GU => __('English (Guam)'),
            self::EN_HK => __('English (Hong Kong SAR China)'),
            self::EN_IN => __('English (India)'),
            self::EN_IE => __('English (Ireland)'),
            self::EN_IL => __('English (Israel)'),
            self::EN_JM => __('English (Jamaica)'),
            self::EN_MT => __('English (Malta)'),
            self::EN_MH => __('English (Marshall Islands)'),
            self::EN_MU => __('English (Mauritius)'),
            self::EN_NA => __('English (Namibia)'),
            self::EN_NZ => __('English (New Zealand)'),
            self::EN_MP => __('English (Northern Mariana Islands)'),
            self::EN_PK => __('English (Pakistan)'),
            self::EN_PH => __('English (Philippines)'),
            self::EN_SG => __('English (Singapore)'),
            self::EN_ZA => __('English (South Africa)'),
            self::EN_TT => __('English (Trinidad and Tobago)'),
            self::EN_UM => __('English (U.S. Minor Outlying Islands)'),
            self::EN_VI => __('English (U.S. Virgin Islands)'),
            self::EN_GB => __('English (United Kingdom)'),
            self::EN_US => __('English (United States)'),
            self::EN_ZW => __('English (Zimbabwe)'),
            self::EN => __('English'),
            self::EO => __('Esperanto'),
            self::ET_EE => __('Estonian (Estonia)'),
            self::ET => __('Estonian'),
            self::EE_GH => __('Ewe (Ghana)'),
            self::EE_TG => __('Ewe (Togo)'),
            self::EE => __('Ewe'),
            self::FO_FO => __('Faroese (Faroe Islands)'),
            self::FO => __('Faroese'),
            self::FIL_PH => __('Filipino (Philippines)'),
            self::FIL => __('Filipino'),
            self::FI_FI => __('Finnish (Finland)'),
            self::FI => __('Finnish'),
            self::FR_BE => __('French (Belgium)'),
            self::FR_BJ => __('French (Benin)'),
            self::FR_BF => __('French (Burkina Faso)'),
            self::FR_BI => __('French (Burundi)'),
            self::FR_CM => __('French (Cameroon)'),
            self::FR_CA => __('French (Canada)'),
            self::FR_CF => __('French (Central African Republic)'),
            self::FR_TD => __('French (Chad)'),
            self::FR_KM => __('French (Comoros)'),
            self::FR_CG => __('French (Congo - Brazzaville)'),
            self::FR_CD => __('French (Congo - Kinshasa)'),
            self::FR_CI => __('French (Côte d’Ivoire)'),
            self::FR_DJ => __('French (Djibouti)'),
            self::FR_GQ => __('French (Equatorial Guinea)'),
            self::FR_FR => __('French (France)'),
            self::FR_GA => __('French (Gabon)'),
            self::FR_GP => __('French (Guadeloupe)'),
            self::FR_GN => __('French (Guinea)'),
            self::FR_LU => __('French (Luxembourg)'),
            self::FR_MG => __('French (Madagascar)'),
            self::FR_ML => __('French (Mali)'),
            self::FR_MQ => __('French (Martinique)'),
            self::FR_MC => __('French (Monaco)'),
            self::FR_NE => __('French (Niger)'),
            self::FR_RW => __('French (Rwanda)'),
            self::FR_RE => __('French (Réunion)'),
            self::FR_BL => __('French (Saint Barthélemy)'),
            self::FR_MF => __('French (Saint Martin)'),
            self::FR_SN => __('French (Senegal)'),
            self::FR_CH => __('French (Switzerland)'),
            self::FR_TG => __('French (Togo)'),
            self::FR => __('French'),
            self::FF_SN => __('Fulah (Senegal)'),
            self::FF => __('Fulah'),
            self::GL_ES => __('Galician (Spain)'),
            self::GL => __('Galician'),
            self::LG_UG => __('Ganda (Uganda)'),
            self::LG => __('Ganda'),
            self::KA_GE => __('Georgian (Georgia)'),
            self::KA => __('Georgian'),
            self::DE_AT => __('German (Austria)'),
            self::DE_BE => __('German (Belgium)'),
            self::DE_DE => __('German (Germany)'),
            self::DE_LI => __('German (Liechtenstein)'),
            self::DE_LU => __('German (Luxembourg)'),
            self::DE_CH => __('German (Switzerland)'),
            self::DE => __('German'),
            self::EL_CY => __('Greek (Cyprus)'),
            self::EL_GR => __('Greek (Greece)'),
            self::EL => __('Greek'),
            self::GU_IN => __('Gujarati (India)'),
            self::GU => __('Gujarati'),
            self::GUZ_KE => __('Gusii (Kenya)'),
            self::GUZ => __('Gusii'),
            self::HA_LATN => __('Hausa (Latin)'),
            self::HA_LATN_GH => __('Hausa (Latin, Ghana)'),
            self::HA_LATN_NE => __('Hausa (Latin, Niger)'),
            self::HA_LATN_NG => __('Hausa (Latin, Nigeria)'),
            self::HA => __('Hausa'),
            self::HAW_US => __('Hawaiian (United States)'),
            self::HAW => __('Hawaiian'),
            self::HE_IL => __('Hebrew (Israel)'),
            self::HE => __('Hebrew'),
            self::HI_IN => __('Hindi (India)'),
            self::HI => __('Hindi'),
            self::HU_HU => __('Hungarian (Hungary)'),
            self::HU => __('Hungarian'),
            self::IS_IS => __('Icelandic (Iceland)'),
            self::IS => __('Icelandic'),
            self::IG_NG => __('Igbo (Nigeria)'),
            self::IG => __('Igbo'),
            self::ID_ID => __('Indonesian (Indonesia)'),
            self::ID => __('Indonesian'),
            self::GA_IE => __('Irish (Ireland)'),
            self::GA => __('Irish'),
            self::IT_IT => __('Italian (Italy)'),
            self::IT_CH => __('Italian (Switzerland)'),
            self::IT => __('Italian'),
            self::JA_JP => __('Japanese (Japan)'),
            self::JA => __('Japanese'),
            self::KEA_CV => __('Kabuverdianu (Cape Verde)'),
            self::KEA => __('Kabuverdianu'),
            self::KAB_DZ => __('Kabyle (Algeria)'),
            self::KAB => __('Kabyle'),
            self::KL_GL => __('Kalaallisut (Greenland)'),
            self::KL => __('Kalaallisut'),
            self::KLN_KE => __('Kalenjin (Kenya)'),
            self::KLN => __('Kalenjin'),
            self::KAM_KE => __('Kamba (Kenya)'),
            self::KAM => __('Kamba'),
            self::KN_IN => __('Kannada (India)'),
            self::KN => __('Kannada'),
            self::KK_CYRL => __('Kazakh (Cyrillic)'),
            self::KK_CYRL_KZ => __('Kazakh (Cyrillic, Kazakhstan)'),
            self::KK => __('Kazakh'),
            self::KM_KH => __('Khmer (Cambodia)'),
            self::KM => __('Khmer'),
            self::KI_KE => __('Kikuyu (Kenya)'),
            self::KI => __('Kikuyu'),
            self::RW_RW => __('Kinyarwanda (Rwanda)'),
            self::RW => __('Kinyarwanda'),
            self::KOK_IN => __('Konkani (India)'),
            self::KOK => __('Konkani'),
            self::KO_KR => __('Korean (South Korea)'),
            self::KO => __('Korean'),
            self::KHQ_ML => __('Koyra Chiini (Mali)'),
            self::KHQ => __('Koyra Chiini'),
            self::SES_ML => __('Koyraboro Senni (Mali)'),
            self::SES => __('Koyraboro Senni'),
            self::LAG_TZ => __('Langi (Tanzania)'),
            self::LAG => __('Langi'),
            self::LV_LV => __('Latvian (Latvia)'),
            self::LV => __('Latvian'),
            self::LT_LT => __('Lithuanian (Lithuania)'),
            self::LT => __('Lithuanian'),
            self::LUO_KE => __('Luo (Kenya)'),
            self::LUO => __('Luo'),
            self::LUY_KE => __('Luyia (Kenya)'),
            self::LUY => __('Luyia'),
            self::MK_MK => __('Macedonian (Macedonia)'),
            self::MK => __('Macedonian'),
            self::JMC_TZ => __('Machame (Tanzania)'),
            self::JMC => __('Machame'),
            self::KDE_TZ => __('Makonde (Tanzania)'),
            self::KDE => __('Makonde'),
            self::MG_MG => __('Malagasy (Madagascar)'),
            self::MG => __('Malagasy'),
            self::MS_BN => __('Malay (Brunei)'),
            self::MS_MY => __('Malay (Malaysia)'),
            self::MS => __('Malay'),
            self::ML_IN => __('Malayalam (India)'),
            self::ML => __('Malayalam'),
            self::MT_MT => __('Maltese (Malta)'),
            self::MT => __('Maltese'),
            self::GV_GB => __('Manx (United Kingdom)'),
            self::GV => __('Manx'),
            self::MR_IN => __('Marathi (India)'),
            self::MR => __('Marathi'),
            self::MAS_KE => __('Masai (Kenya)'),
            self::MAS_TZ => __('Masai (Tanzania)'),
            self::MAS => __('Masai'),
            self::MER_KE => __('Meru (Kenya)'),
            self::MER => __('Meru'),
            self::MFE_MU => __('Morisyen (Mauritius)'),
            self::MFE => __('Morisyen'),
            self::NAQ_NA => __('Nama (Namibia)'),
            self::NAQ => __('Nama'),
            self::NE_IN => __('Nepali (India)'),
            self::NE_NP => __('Nepali (Nepal)'),
            self::NE => __('Nepali'),
            self::ND_ZW => __('North Ndebele (Zimbabwe)'),
            self::ND => __('North Ndebele'),
            self::NB_NO => __('Norwegian Bokmål (Norway)'),
            self::NB => __('Norwegian Bokmål'),
            self::NN_NO => __('Norwegian Nynorsk (Norway)'),
            self::NN => __('Norwegian Nynorsk'),
            self::NYN_UG => __('Nyankole (Uganda)'),
            self::NYN => __('Nyankole'),
            self::OR_IN => __('Oriya (India)'),
            self::OR => __('Oriya'),
            self::OM_ET => __('Oromo (Ethiopia)'),
            self::OM_KE => __('Oromo (Kenya)'),
            self::OM => __('Oromo'),
            self::PS_AF => __('Pashto (Afghanistan)'),
            self::PS => __('Pashto'),
            self::FA_AF => __('Persian (Afghanistan)'),
            self::FA_IR => __('Persian (Iran)'),
            self::FA => __('Persian'),
            self::PL_PL => __('Polish (Poland)'),
            self::PL => __('Polish'),
            self::PT_BR => __('Portuguese (Brazil)'),
            self::PT_GW => __('Portuguese (Guinea-Bissau)'),
            self::PT_MZ => __('Portuguese (Mozambique)'),
            self::PT_PT => __('Portuguese (Portugal)'),
            self::PT => __('Portuguese'),
            self::PA_ARAB => __('Punjabi (Arabic)'),
            self::PA_ARAB_PK => __('Punjabi (Arabic, Pakistan)'),
            self::PA_GURU => __('Punjabi (Gurmukhi)'),
            self::PA_GURU_IN => __('Punjabi (Gurmukhi, India)'),
            self::PA => __('Punjabi'),
            self::RO_MD => __('Romanian (Moldova)'),
            self::RO_RO => __('Romanian (Romania)'),
            self::RO => __('Romanian'),
            self::RM_CH => __('Romansh (Switzerland)'),
            self::RM => __('Romansh'),
            self::ROF_TZ => __('Rombo (Tanzania)'),
            self::ROF => __('Rombo'),
            self::RU_MD => __('Russian (Moldova)'),
            self::RU_RU => __('Russian (Russia)'),
            self::RU_UA => __('Russian (Ukraine)'),
            self::RU => __('Russian'),
            self::RWK_TZ => __('Rwa (Tanzania)'),
            self::RWK => __('Rwa'),
            self::SAQ_KE => __('Samburu (Kenya)'),
            self::SAQ => __('Samburu'),
            self::SG_CF => __('Sango (Central African Republic)'),
            self::SG => __('Sango'),
            self::SEH_MZ => __('Sena (Mozambique)'),
            self::SEH => __('Sena'),
            self::SR_CYRL => __('Serbian (Cyrillic)'),
            self::SR_CYRL_BA => __('Serbian (Cyrillic, Bosnia and Herzegovina)'),
            self::SR_CYRL_ME => __('Serbian (Cyrillic, Montenegro)'),
            self::SR_CYRL_RS => __('Serbian (Cyrillic, Serbia)'),
            self::SR_LATN => __('Serbian (Latin)'),
            self::SR_LATN_BA => __('Serbian (Latin, Bosnia and Herzegovina)'),
            self::SR_LATN_ME => __('Serbian (Latin, Montenegro)'),
            self::SR_LATN_RS => __('Serbian (Latin, Serbia)'),
            self::SR => __('Serbian'),
            self::SN_ZW => __('Shona (Zimbabwe)'),
            self::SN => __('Shona'),
            self::II_CN => __('Sichuan Yi (China)'),
            self::II => __('Sichuan Yi'),
            self::SI_LK => __('Sinhala (Sri Lanka)'),
            self::SI => __('Sinhala'),
            self::SK_SK => __('Slovak (Slovakia)'),
            self::SK => __('Slovak'),
            self::SL_SI => __('Slovenian (Slovenia)'),
            self::SL => __('Slovenian'),
            self::XOG_UG => __('Soga (Uganda)'),
            self::XOG => __('Soga'),
            self::SO_DJ => __('Somali (Djibouti)'),
            self::SO_ET => __('Somali (Ethiopia)'),
            self::SO_KE => __('Somali (Kenya)'),
            self::SO_SO => __('Somali (Somalia)'),
            self::SO => __('Somali'),
            self::ES_AR => __('Spanish (Argentina)'),
            self::ES_BO => __('Spanish (Bolivia)'),
            self::ES_CL => __('Spanish (Chile)'),
            self::ES_CO => __('Spanish (Colombia)'),
            self::ES_CR => __('Spanish (Costa Rica)'),
            self::ES_DO => __('Spanish (Dominican Republic)'),
            self::ES_EC => __('Spanish (Ecuador)'),
            self::ES_SV => __('Spanish (El Salvador)'),
            self::ES_GQ => __('Spanish (Equatorial Guinea)'),
            self::ES_GT => __('Spanish (Guatemala)'),
            self::ES_HN => __('Spanish (Honduras)'),
            self::ES_419 => __('Spanish (Latin America)'),
            self::ES_MX => __('Spanish (Mexico)'),
            self::ES_NI => __('Spanish (Nicaragua)'),
            self::ES_PA => __('Spanish (Panama)'),
            self::ES_PY => __('Spanish (Paraguay)'),
            self::ES_PE => __('Spanish (Peru)'),
            self::ES_PR => __('Spanish (Puerto Rico)'),
            self::ES_ES => __('Spanish (Spain)'),
            self::ES_US => __('Spanish (United States)'),
            self::ES_UY => __('Spanish (Uruguay)'),
            self::ES_VE => __('Spanish (Venezuela)'),
            self::ES => __('Spanish'),
            self::SW_KE => __('Swahili (Kenya)'),
            self::SW_TZ => __('Swahili (Tanzania)'),
            self::SW => __('Swahili'),
            self::SV_FI => __('Swedish (Finland)'),
            self::SV_SE => __('Swedish (Sweden)'),
            self::SV => __('Swedish'),
            self::GSW_CH => __('Swiss German (Switzerland)'),
            self::GSW => __('Swiss German'),
            self::SHI_LATN => __('Tachelhit (Latin)'),
            self::SHI_LATN_MA => __('Tachelhit (Latin, Morocco)'),
            self::SHI_TFNG => __('Tachelhit (Tifinagh)'),
            self::SHI_TFNG_MA => __('Tachelhit (Tifinagh, Morocco)'),
            self::SHI => __('Tachelhit'),
            self::DAV_KE => __('Taita (Kenya)'),
            self::DAV => __('Taita'),
            self::TA_IN => __('Tamil (India)'),
            self::TA_LK => __('Tamil (Sri Lanka)'),
            self::TA => __('Tamil'),
            self::TE_IN => __('Telugu (India)'),
            self::TE => __('Telugu'),
            self::TEO_KE => __('Teso (Kenya)'),
            self::TEO_UG => __('Teso (Uganda)'),
            self::TEO => __('Teso'),
            self::TH_TH => __('Thai (Thailand)'),
            self::TH => __('Thai'),
            self::BO_CN => __('Tibetan (China)'),
            self::BO_IN => __('Tibetan (India)'),
            self::BO => __('Tibetan'),
            self::TI_ER => __('Tigrinya (Eritrea)'),
            self::TI_ET => __('Tigrinya (Ethiopia)'),
            self::TI => __('Tigrinya'),
            self::TO_TO => __('Tonga (Tonga)'),
            self::TO => __('Tonga'),
            self::TR_TR => __('Turkish (Turkey)'),
            self::TR => __('Turkish'),
            self::UK_UA => __('Ukrainian (Ukraine)'),
            self::UK => __('Ukrainian'),
            self::UR_IN => __('Urdu (India)'),
            self::UR_PK => __('Urdu (Pakistan)'),
            self::UR => __('Urdu'),
            self::UZ_ARAB => __('Uzbek (Arabic)'),
            self::UZ_ARAB_AF => __('Uzbek (Arabic, Afghanistan)'),
            self::UZ_CYRL => __('Uzbek (Cyrillic)'),
            self::UZ_CYRL_UZ => __('Uzbek (Cyrillic, Uzbekistan)'),
            self::UZ_LATN => __('Uzbek (Latin)'),
            self::UZ_LATN_UZ => __('Uzbek (Latin, Uzbekistan)'),
            self::UZ => __('Uzbek'),
            self::VI_VN => __('Vietnamese (Vietnam)'),
            self::VI => __('Vietnamese'),
            self::VUN_TZ => __('Vunjo (Tanzania)'),
            self::VUN => __('Vunjo'),
            self::CY_GB => __('Welsh (United Kingdom)'),
            self::CY => __('Welsh'),
            self::YO_NG => __('Yoruba (Nigeria)'),
            self::YO => __('Yoruba'),
            self::ZU_ZA => __('Zulu (South Africa)'),
            self::ZU => __('Zulu'),
        };
    }
}
